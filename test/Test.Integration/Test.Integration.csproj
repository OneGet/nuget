<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\..\Build\NuGet.Settings.targets" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>
    </ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{135A5956-39CD-495C-8FB2-06678A90488D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>NuGet.Test.Integration</RootNamespace>
    <AssemblyName>NuGet.Test.Integration</AssemblyName>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\..\..\</SolutionDir>
    <SolutionPath Condition="$(SolutionPath) == '' Or $(SolutionPath) == '*Undefined*'">$(SolutionDir)\OneGet.sln</SolutionPath>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <Import Project="$(SolutionPath).props" Condition="Exists('$(SolutionPath).props')" />
  <ItemGroup>
    <Reference Include="Moq, Version=4.1.1309.919, Culture=neutral, PublicKeyToken=69f491c39445e920, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\..\packages\Moq.4.1.1309.0919\lib\net40\Moq.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.DataAnnotations" />
    <Reference Include="System.configuration" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.XML" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="xunit, Version=1.9.2.1705, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\..\packages\xunit.1.9.2\lib\net20\xunit.dll</HintPath>
    </Reference>
    <Reference Include="xunit.extensions, Version=1.9.2.1705, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\..\packages\xunit.extensions.1.9.2\lib\net20\xunit.extensions.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <CodeAnalysisDependentAssemblyPaths Condition=" '$(VS100COMNTOOLS)' != '' " Include="$(VS100COMNTOOLS)..\IDE\PrivateAssemblies">
      <Visible>False</Visible>
    </CodeAnalysisDependentAssemblyPaths>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\..\Common\CommonAssemblyInfo.cs">
      <Link>Properties\CommonAssemblyInfo.cs</Link>
    </Compile>
    <Compile Include="CommandRunner.cs" />
    <Compile Include="Core\LocalPackageRepositoryTest.cs" />
    <Compile Include="MockServer.cs" />
    <Compile Include="MockServerResource.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MockServerResource.resx</DependentUpon>
    </Compile>
    <Compile Include="NuGetCommandLine\DefaultConfigurationFilePreserver.cs" />
    <Compile Include="NuGetCommandLine\NuGetConfigCommandTest.cs" />
    <Compile Include="NuGetCommandLine\NuGetDeleteCommandTest.cs" />
    <Compile Include="NuGetCommandLine\NuGetHelpCommandTest.cs" />
    <Compile Include="NuGetCommandLine\NuGetInstallCommandTest.cs" />
    <Compile Include="NuGetCommandLine\NuGetRestoreCommandTest.cs" />
    <Compile Include="NuGetCommandLine\NuGetListCommandTest.cs" />
    <Compile Include="NuGetCommandLine\NuGetCommandLineTest.cs" />
    <Compile Include="NuGetCommandLine\NuGetPackCommandTest.cs" />
    <Compile Include="NuGetCommandLine\NuGetPushCommandTest.cs" />
    <Compile Include="NuGetCommandLine\NuSpecFileContext.cs" />
    <Compile Include="Core\PathResolverTest.cs" />
    <Compile Include="NuGetCommandLine\NugetProgramStatic.cs" />
    <Compile Include="NuGetCommandLine\PackageCreator.cs" />
    <Compile Include="NuGetCommandLine\ProjectFactoryTest.cs" />
    <Compile Include="NuGetCommandLine\NuGetSourcesCommandTest.cs" />
    <Compile Include="NuGetCommandLine\Util.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\src\CommandLine\CommandLine.csproj">
      <Project>{B34A6632-E627-4B66-8E0A-D2DA3BC96893}</Project>
      <Name>CommandLine</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\src\Core\Core.csproj">
      <Project>{F879F274-EFA0-4157-8404-33A19B4E6AEC}</Project>
      <Name>Core</Name>
    </ProjectReference>
    <ProjectReference Include="..\Test.Utility\Test.Utility.csproj">
      <Project>{F016882A-C798-4446-BB75-D3C393A38B32}</Project>
      <Name>Test.Utility</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="MockServerResource.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>MockServerResource.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}" />
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <Import Project="..\..\Build\NuGet.Test.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
  </Target>
</Project>